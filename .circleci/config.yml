version: 2

workflows:
  version: 2
  default:
    jobs:
      - build
      - release
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: mbgl/7d2403f42e:android-ndk-r16b
    environment:
      JVM_OPTS: -Xmx3200m
      BUILDTYPE: Debug
      IS_LOCAL_DEVELOPMENT: false
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "gradle/dependencies.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "gradle/dependencies.gradle" }}
      - run:
          name: Check code style
          command: make checkstyle
      - run:
          name: Run Lint
          command: ./gradlew lint
      - run:
          name: Run unit-test in Android libraries
          command: make test
      - run:
          name: Build testapp APK
          command: |
            ./gradlew accessToken
            ./gradlew app:assembleDebug
      - run:
          name: Build release to test ProGuard rules
          command: ./gradlew app:assembleRelease
      - run:
          name: Build libtelemetry test APK
          command: ./gradlew libtelemetry:assembleDebugAndroidTest
      - run:
          name: Log in to Google Cloud Platform
          shell: /bin/bash -euo pipefail
          command: |
            echo "${GCLOUD_SERVICE_ACCOUNT_JSON}" > secret.json
            gcloud auth activate-service-account --key-file secret.json --project mapbox-events-android
            rm secret.json
      - run:
          name: Run instrumentation tests on Firebase
          no_output_timeout: 1200
          shell: /bin/bash -euo pipefail
          command: |
            gcloud firebase test android run --type instrumentation --app app/build/outputs/apk/app-debug.apk --test libtelemetry/build/outputs/apk/libtelemetry-debug-androidTest.apk --device model=Nexus5,version=23,locale=en,orientation=portrait --timeout 10m
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

# ------------------------------------------------------------------------------
  release:
    branch:
      only:
      - master
    docker:
      - image: mbgl/7d2403f42e:android-ndk-r16b
    working_directory: ~/code
    environment:
      BUILDTYPE: Release
      IS_LOCAL_DEVELOPMENT: false
    steps:
      - checkout
      - run:
          name: Generate Maven credentials
          shell: /bin/bash -euo pipefail
          command: |
            aws s3 cp s3://mapbox/android/signing-credentials/secring.gpg secring.gpg
            echo "NEXUS_USERNAME=$PUBLISH_NEXUS_USERNAME
            NEXUS_PASSWORD=$PUBLISH_NEXUS_PASSWORD
            signing.keyId=$SIGNING_KEYID
            signing.password=$SIGNING_PASSWORD
            signing.secretKeyRingFile=../secring.gpg" >> gradle.properties
      - run:
          name: Build libraries
          command: make release
      - deploy:
          name: Publish to Maven Central
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
            make publish ;
            fi
      - store_artifacts:
          path: app/build/reports
          destination: reports
