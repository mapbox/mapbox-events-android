buildscript {
    apply from: "${rootDir}/gradle/dependencies.gradle"
    repositories {
        google()
        jcenter()
        maven {
            url 'https://api.mapbox.com/downloads/v2/releases/maven'
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = "mapbox"
                password = project.hasProperty('SDK_REGISTRY_TOKEN') ? project.property('SDK_REGISTRY_TOKEN') : System.getenv('SDK_REGISTRY_TOKEN')
            }
        }
    }

    dependencies {
        classpath pluginDependencies.gradle
        classpath pluginDependencies.mapboxSdkVersions
        if (SDK_REGISTRY == 'true') {
            println 'SDK_REGISTRY=true'
            classpath pluginDependencies.mapboxSdkRegistry
        } else {
            println 'SDK_REGISTRY=false'
        }
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    group = GROUP
}

subprojects {
    apply plugin: 'idea'
    apply from: "${rootDir}/gradle/dependencies.gradle"

    afterEvaluate {
        tasks.findByName('check').dependsOn('checkstyle')
    }
}

def TESTABLE_MODULES = ["libcore", "libtelemetry", "liblocation"]
def RELEASE_MODULES = ["libcore", "libtelemetry"]

subprojects { subproject ->

    if (TESTABLE_MODULES.contains(subproject.name)) {
        apply from: "${rootDir}/gradle/checkstyle.gradle"
        apply from: "${rootDir}/gradle/jacoco.gradle"
    }

    if (RELEASE_MODULES.contains(subproject.name)) {
        subproject.afterEvaluate {
            subproject.apply from: "javadoc.gradle"
            subproject.apply plugin: 'com.mapbox.android.sdk.versions'
        }
        subproject.apply from: "${rootDir}/gradle/mvn-push-android.gradle"
    }

    if (subproject.name == "libtelemetry") {
        subproject.apply from: "${rootDir}/gradle/download-schema.gradle"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

