apply plugin: 'com.android.library'

// Re-apply runtime required subproject gradle scripts and classpaths,
// so that Maps SDK doesn't rely on them being served from the top level build.gradle
apply from: "../gradle/dependencies.gradle"

version = VERSION_NAME

android {
    compileSdkVersion androidVersions.compileSdkVersion

    defaultConfig {
        minSdkVersion androidVersions.minSdkVersion
        targetSdkVersion androidVersions.targetSdkVersion
        versionCode 1
        versionName version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-consumer.pro'
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', '../liblocation/src/main/java']
        }
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }
}

dependencies {
    compileOnly dependenciesList.gmsLocation

    testImplementation dependenciesList.junit
    testImplementation dependenciesList.mockito
    testImplementation dependenciesList.assertJ
    androidTestImplementation dependenciesList.testEspressoCore
    androidTestImplementation dependenciesList.testRunner
    androidTestImplementation dependenciesList.testRules
}


apply plugin: 'maven-publish'
apply plugin: 'com.mapbox.sdkRegistry'
apply from: file('../gradle/artifact-settings.gradle')

version = project.ext.versionName
group = project.ext.mapboxArtifactGroupId

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId this.group
                artifactId project.ext.mapboxArtifactId
                version this.version
            }
        }
    }
}

registry {
    sdkName = project.ext.mapboxRegistrySdkName
    production = true
    snapshot = project.ext.versionName.endsWith("-SNAPSHOT")
    override = snapshot ? true : false
    dryRun = false
    publish = true
    publications = ["release"]
}
