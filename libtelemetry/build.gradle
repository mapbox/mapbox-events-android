apply plugin: 'com.android.library'

// Re-apply runtime required subproject gradle scripts and classpaths,
// so that Maps SDK doesn't rely on them being served from the top level build.gradle
apply from: "../gradle/dependencies.gradle"

version = VERSION_NAME

android {
    compileSdkVersion androidVersions.compileSdkVersion

    defaultConfig {
        minSdkVersion androidVersions.minSdkVersion
        targetSdkVersion androidVersions.targetSdkVersion
        versionCode 1
        versionName version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-consumer.pro'
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    flavorDimensions "version"
    productFlavors {
        okhttp4 {
            dimension "version"
            minSdkVersion 21
        }

        okhttp3 {
            dimension "version"
            versionNameSuffix "-okhttp3"
        }
    }
}

dependencies {
    implementation dependenciesList.androidCore
    okhttp3Implementation dependenciesList.okhttp3
    okhttp4Implementation dependenciesList.okhttp4
    implementation dependenciesList.gson
    implementation dependenciesList.supportAnnotation
    implementation project(':libcore')

    implementation dependenciesList.supportCoreUtils

    testImplementation dependenciesList.junit
    testImplementation dependenciesList.mockito

    testOkhttp3Implementation dependenciesList.okhttp3Mockwebserver
    testOkhttp3Implementation dependenciesList.okhttp3Tls

    testOkhttp4Implementation dependenciesList.okhttp4Mockwebserver
    testOkhttp4Implementation dependenciesList.okhttp4Tls

    testImplementation dependenciesList.commonsIO
    testImplementation dependenciesList.assertJ

    androidTestImplementation dependenciesList.mockitoAndroid
    androidTestImplementation dependenciesList.testRunner
    androidTestImplementation dependenciesList.testRules
}


apply from: file('../gradle/publish.gradle')

afterEvaluate {
    publishing {
            publications {
                okhttp4Release(MavenPublication) {
                    from components.okhttp4Release
                    groupId this.group
                    artifactId project.ext.mapboxArtifactId
                    version this.version

                    artifact(androidJavadocsJar)
                    artifact(androidSourcesJar)

                    attachBasePomInfo(pom)
                }

                okhttp3Release(MavenPublication) {
                    from components.okhttp3Release
                    groupId this.group
                    artifactId project.ext.mapboxArtifactId + "-okhttp3"
                    version this.version

                    artifact(androidJavadocsJar)
                    artifact(androidSourcesJar)

                    attachBasePomInfo(pom)
                }
            }
    }
}

registry {
    sdkName = project.ext.mapboxRegistrySdkName
    production = true
    snapshot = project.ext.versionName.endsWith("-SNAPSHOT")
    override = true
    dryRun = false
    publish = true
    publications = ["okhttp4Release", "okhttp3Release"]
}
